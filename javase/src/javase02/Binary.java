//进制和位运算
package javase02;

public class Binary {

	public static void main(String[] args) {
		/*
		对于整数，有四种表示方式:
			1.二进制(0b): 0,1 ,满2进1.以0b或OB开头。

			2.十进制: 0-9 ,满10进1.

			3.八进制(0): 0-7 ,满8进1.以数字0开头表示。

			4.十六进制(0x): 0-9及A(10)-F(15)， 满16进1.以0x或0X开头表示。此处的A-F不区分大小写。
		*/

		// 其他-->10
		/**规则:从最低位(右边)开始，将每个位上的数提取出来，乘以2;8;16的(位数- 1)次方，然后求和。*/
		// 10-->其他
		/**规则:将该数不断除以2;8;16,直到商为0为止，然后将每步得到的余数倒过来，就是对应的二进制。*/
		// 2-->8
		/**规则:从低位开始,将二进制数每三位一组，转成对应的八进制数即可。*/
		// 2-->16
		/**规则:从低位开始,将二进制数每四位一组，转成对应的十六进制数即可。*/
		// 8-->2
		/**规则:将八进制数每1位，转成对应的一个3位的二进制数即可。*/
		// 16-->2
		/**规则:将八进制数每1位，转成对应的一个4位的二进制数即可。*/

		//位运算
		/**
		 分别是按位与&、按位或|、按位异或^按位取反~ ,它们的运算规则是:
		 按位与&
		 两位全为1,结果为1,否则为0
		 按位或|
		 两位有一个为1,结果为1,否则为0
		 按位异或^:
		 两位一一个为0,-个为1,结果为1,否则为0
		 按位取反~ :0->1 ,1->0

		 */

		int a=1>>2; // 1向右位移2位
		int b=-1>>2;//  算术右移
		int c=1<<2;//
		int d=-1<<2;//
		int e=3>>> 2;//无符号右移
		//无<<<
		//a,b,c,d,e结果是多少


		/*
		1.二进制的最高位是符号位: 0表示正数，1表示负数(口诀: 0->0 1-> -)

		2.正数的原码，反码，补码都一-样(三码合一)

		3.负数的反码=它的原码符号位不变，其它位取反(0->1,1->0)

		4.负数的补码=它的反码+1，负数的反码=负数的补码- 1

		5.0的反码，补码都是0

		6. java没有无符号数，换言之，java中的数都是有符号的

		7.在计算机运算的时候，都是以补码的方式来运算的.

		8.当我们看运算结果的时候，要看他的原码
		*/


	}

}
